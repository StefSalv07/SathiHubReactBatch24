let is new Var after ES6

const for constant Variable
Let and const 
-------------------------------------------------------
02-03-24

1.vishal -> to perform speciifc task
2.krishna-> code resuablibilty
3.Dev-> block of staement or block of code

A code or block of statement is written with an aim to perform specific task and advantage of using functions over statements is code re-useaa.....

bankAccount()
ATM -> swipe a card pin-> passcode 
bank does checks that the pin entered and the pin stored in the database matches?
if(yes)
1.account deatils
2.withdraw
3.deposit
else(no)//passcode dont matches
ask hime to re-enter after sometimr 

1.user(dev)
1.main()
{
    checkbal
    if(bal){

    }
    passcde valdiations
    {
        passcode is true or not
    }

    loan \
    1.account deatils
    2.withdraw
    3.deposit
300lines
//debug
//maintain
//forgot the passcode

 funtion()
1.funName
2.return type
3.parameters


}
bal.c
BANK()
{
    main()
    {

        void checkBal(1234567,'ABC345')->// user entered 

        when a fun call is made if at time we pass something to afun then it is called a agruments ()

        void createBanKAccount()
        {
            user -> name fname email phoneno intBal of account nomminee details 

            user.save()-> details in database
        }// no ret no args1.

        2.parameters and no ret type
         void checkBal(int accountNumber, String Custid)
         {
            if(accountNumber == user.accountNumber)
            {
                1.Withdraw
                2.desposit
                3.balcheck(3)
                {
                    System.out.println("Your Balance is "+user.IntBal); 
                }
            }   

            3. Ret with paramters()
            int LoanType(accountNumber,.Custid)
            {
                     if(accountNumber == user.accountNumber)
            {
                1.Withdraw
                2.desposit
                3.balcheck(3)
                4.loanAcessed()
                {
                    System.out.println("Your Balance is "+user.IntBal); 
                }
                return int;//unique load id geeraeted

            4.//int chnagePasscode(currecnt passcode , AccouuntNum){
                 
                 currecnt passcode , AccouuntNum;
                 if(accountNumber == user.accountNumber)
            {
                1.Withdraw
                2.desposit
                3.resetPasscode()
                {
                    System.out.println("Your Balance is "+user.IntBal); 
                }
                ret newGenarted Pascode;
            }

            }
         }

    }
}

--------------------------------------------------------------------------
// java\

// class bank

// {//default
//     bank(){
//         bal=0;
//     }
//     main()
//     {
//         bank b1=new bank();
//         bank b2=new bank();
//     }
// }

js functions()ES()-> regulates the rules and decorom of js
1.Named funtion
1.//synatx of Named funtion
function nameOfTheFuntion()
{
    //code to be executed
}

2.Arrow functions
funname=(par1,par2)=>expression{
    //logc
}
3.constructor funtion

function person(lname, age) {
  this.lname = lname;
  this.age = age;

  this.introduce = function () {
    return (
      "Hii My Name is " + this.lname + " and I am " + this.age + " years old"
    );
  };
}
//constor fun
1.arrow fun2
2. callbacks()->  recursion function()-> "A function calling itself".

--------------------------------------------------------------------------------------------------------------
callback();
1-entity calls -> 
1-entity revices and call the original en

fucntion ShowName(int num,)
{

    console.log("Whlile doing simple ShowName);
    ShowName();//
}

//  to search the defination 
loop ()
for()-> nlog()


java async

engine itself loop ()-> evnet loop()->


promises()-> instratgarm ke bhai await ()
asysnc SendRec()-> data inpurt _. stack memeory()
async await 

1. effictent 
2.quick() fun() -> 

Array ()->

int array [5]; 
array[0] = 4;
array[1] = 6;
array[2] = 100;

array every thing is on index. so we can access by index.

console.log(array);

//linear ds  
1.array-> [] fix size 
2.stack -> memeory ram [1000][1004][1008][...][...][][][[][][]]
3.queue
4.linked list ()
----------------------------------------

cin>> loop 
arr.length()
for()
{
    cout<<"\n";
}

// req -> once i pop() the elemnt then only psh fun() shold be called but pop() should not call again itself

----------------------------------------------------------------------------------
Data type specificnathi 

2. no loop 
3. funtions
1. foreach()
2.map()
3.filter() 

Stack()

pop()
push()
peek()
getElementByIndex()

------------------------------------------------------------------------------------------------------------------

object oriented prog

abstarction- hiding the implementation details

class ->             Animal->   
            //dog //cat //cow // monkey 

            brids -> a bird () -- upper level abstarction
             owl , sparrow // crow

             fruit-- upper level abstarction
    
             a layer above object  
             // apple 
             // water-melon

             // vehical -> umbrella
             car / bike / truck 
datatypes
number()
string()
boolean 
symbol ? : ternary op
null -> no value(empty)
undefined -> the value whcih i got has no parenets (orphan )
any value which is not a primitive data type  

object 
// progam -< new keyword
// object.create();

const car = {

}// define an object 

// 2nd way of creating an object

 
// way to create an object using create Meathod
const car2 = Object.create(); // create a new object using an existing object as the prototype of the newly created object



