let is new Var after ES6

const for constant Variable
Let and const 
-------------------------------------------------------
02-03-24

1.vishal -> to perform speciifc task
2.krishna-> code resuablibilty
3.Dev-> block of staement or block of code

A code or block of statement is written with an aim to perform specific task and advantage of using functions over statements is code re-useaa.....

bankAccount()
ATM -> swipe a card pin-> passcode 
bank does checks that the pin entered and the pin stored in the database matches?
if(yes)
1.account deatils
2.withdraw
3.deposit
else(no)//passcode dont matches
ask hime to re-enter after sometimr 

1.user(dev)
1.main()
{
    checkbal
    if(bal){

    }
    passcde valdiations
    {
        passcode is true or not
    }

    loan \
    1.account deatils
    2.withdraw
    3.deposit
300lines
//debug
//maintain
//forgot the passcode

 funtion()
1.funName
2.return type
3.parameters


}
bal.c
BANK()
{
    main()
    {

        void checkBal(1234567,'ABC345')->// user entered 

        when a fun call is made if at time we pass something to afun then it is called a agruments ()

        void createBanKAccount()
        {
            user -> name fname email phoneno intBal of account nomminee details 

            user.save()-> details in database
        }// no ret no args1.

        2.parameters and no ret type
         void checkBal(int accountNumber, String Custid)
         {
            if(accountNumber == user.accountNumber)
            {
                1.Withdraw
                2.desposit
                3.balcheck(3)
                {
                    System.out.println("Your Balance is "+user.IntBal); 
                }
            }   

            3. Ret with paramters()
            int LoanType(accountNumber,.Custid)
            {
                     if(accountNumber == user.accountNumber)
            {
                1.Withdraw
                2.desposit
                3.balcheck(3)
                4.loanAcessed()
                {
                    System.out.println("Your Balance is "+user.IntBal); 
                }
                return int;//unique load id geeraeted

            4.//int chnagePasscode(currecnt passcode , AccouuntNum){
                 
                 currecnt passcode , AccouuntNum;
                 if(accountNumber == user.accountNumber)
            {
                1.Withdraw
                2.desposit
                3.resetPasscode()
                {
                    System.out.println("Your Balance is "+user.IntBal); 
                }
                ret newGenarted Pascode;
            }

            }
         }

    }
}

--------------------------------------------------------------------------
// java\

// class bank

// {//default
//     bank(){
//         bal=0;
//     }
//     main()
//     {
//         bank b1=new bank();
//         bank b2=new bank();
//     }
// }

js functions()ES()-> regulates the rules and decorom of js
1.Named funtion
1.//synatx of Named funtion
function nameOfTheFuntion()
{
    //code to be executed
}

2.Arrow functions
funname=(par1,par2)=>expression{
    //logc
}
3.constructor funtion

function person(lname, age) {
  this.lname = lname;
  this.age = age;

  this.introduce = function () {
    return (
      "Hii My Name is " + this.lname + " and I am " + this.age + " years old"
    );
  };
}
//constor fun
1.arrow fun2
2. callbacks()->  recursion function()-> "A function calling itself".

--------------------------------------------------------------------------------------------------------------
callback();
1-entity calls -> 
1-entity revices and call the original en

fucntion ShowName(int num,)
{

    console.log("Whlile doing simple ShowName);
    ShowName();//
}

//  to search the defination 
loop ()
for()-> nlog()


java async

engine itself loop ()-> evnet loop()->


promises()-> instratgarm ke bhai await ()
asysnc SendRec()-> data inpurt _. stack memeory()
async await 

1. effictent 
2.quick() fun() -> 

Array ()->

int array [5]; 
array[0] = 4;
array[1] = 6;
array[2] = 100;

array every thing is on index. so we can access by index.

console.log(array);

//linear ds  
1.array-> [] fix size 
2.stack -> memeory ram [1000][1004][1008][...][...][][][[][][]]
3.queue
4.linked list ()
----------------------------------------

cin>> loop 
arr.length()
for()
{
    cout<<"\n";
}

// req -> once i pop() the elemnt then only psh fun() shold be called but pop() should not call again itself

----------------------------------------------------------------------------------
Data type specificnathi 

2. no loop 
3. funtions
1. foreach()
2.map()
3.filter() 

Stack()

pop()
push()
peek()
getElementByIndex()

------------------------------------------------------------------------------------------------------------------

object oriented prog

abstarction- hiding the implementation details

class ->             Animal->   
            //dog //cat //cow // monkey 

            brids -> a bird () -- upper level abstarction
             owl , sparrow // crow

             fruit-- upper level abstarction
    
             a layer above object  
             // apple 
             // water-melon

             // vehical -> umbrella
             car / bike / truck 
datatypes
number()
string()
boolean 
symbol ? : ternary op
null -> no value(empty)
undefined -> the value whcih i got has no parenets (orphan )
any value which is not a primitive data type  

object 
// progam -< new keyword
// object.create();

const car = {

}// define an object 

// 2nd way of creating an object

 
// way to create an object using create Meathod
const car2 = Object.create(); // create a new object using an existing object as the prototype of the newly created object



----------------------------------------------github-----------------------------------

1. git init -> inializae a  new empty repo (local machine)
2. login to the browser and click on new 
3. name your repository
4. copy git add remote line from the Stack
5. cp that line on cmd 
data is in pipe on your local computer
5.1 git status -> nothing is added ()
6. git add .    (data)
-----------------------------------------------------------------------------------------------

there are many backend prog lang ?
1.c
2.c++
3.java[env]
4.python

node js?
pros of using node js 
2.which has js lib for running js application
3.real time server application 
node js-> Runtime Env + js lib

featues
1.fast -> extremlyfast
v8-> code exec()
2.I/O async management and Event driven
-> data?
->7
    undefined()-> the data is not yet defined for use.
3.single threaded()
eventLoop()
4.non buffering-> exec data from the user or we can say application offset 
mechanism -> 
buffer
i5 i7 processor -> buffer data store ( not in database)
-> []
4. input // no process // outp 
5.open source
node js 
-> npm (pacakge) folder 
node pacakge manager
client and server
1.req
    1.data o/p
    2.data i/p -> db store 
    3. id -> details
    4.image 
    5.file
2.res
    -> mobile phone
        andorid,react native(cross-platform)-> ios andorid
            -> api's  
    -> laptop 
    html-> data pasre over internet
    xml-> 
    dis-advantage
        1. readability 
        2.parsing the data ()
    Json-> java script object notation (object) collections of objects in terms of lib


// example data parsing 
1. sign up-50
    -1. email id 
     2. password 
     3. name
     slow , parsing data ne 
     structured -> defined that way only you have to work
     link -> server client 
        email: shsh@gmail.com
        pass:bfsyg
        name :djbeiu
        <user> hierachies
        <email></email>
        <password>
            <validate>
                password-> it shoulb be of 8 charcheters

            </validate>
            </password>
        <name></name>
        </user>
        valdiation .dml 
2. json=> root xml -> object 
{
    key:value
}

const user {
    name: 'John',
    email:'shsh@gmail.com'
    {
        type:'personal'
        required = true,
        unique:true// db->pk+pk (super key)
    }
    passcode:{
        type: 'shivam',
    }
}

mobile app-> server json (parse)
web app/site -> json(parse)
json(
    node js -> api,
    nosql -> connection
        ->find()-> {}
            sql -> select * from tablename 
            sql -> select * from tablename where id = 
            resultSet-> select * from tablename where id = 
            -> findAll()
        -> update()
            sql-> select * from ()
            set= () update fielName set "";
           resultSet-> select * from tablename where id = 
           updated  
        ->updateOne()
        -> deleteONe()
        //-> deleteAll()
)
1. effictent -> queryresponse
2. lightweight-> json()-> object save update del
3. json() fast -> json (res) -easy for a human being to understand.




        <user> hierachies
            <email></email>
            <password>
                <validate>
                    password-> it shoulb be of 8 charcheters

            </validate>
            </password>
        <name></name>
        </user>
json{
    key:value
    key: {key: value
        {
            key:value
        }}
}
easy to understand
----------------------------------------------MERN------------------------------------
MONGO-> 
Express -> middleware 

java servlet pages 

req
req validate
req -> 
-> filter (middlware)
res
middleware->express used for validating the data of the web app
1. authentication
    secret data secure 
2. authorization
3. validation 
express()
1. http:hyper text trasfer protocal
api
{
    parameters:{

    }
    headers:{

    }
    body{

    }
}
    methods:
    json()-> object notation -> 
    res res 
    json 
    routing -> folder -> specfic file ne communicate between diff files ?
    render->page goto->page <a href="home.html"a></a>
    services -> tp services{extrenal api use}
    payment -> data -> store -db
    amount -> bal-> 

    paypal -> api use 
    razorpay ->

    1.req res -> multiple
    db-> req -> connection (no)
    db->1. connection() static 
    env-> PORT -> backend server kaya port -> 9000 ,6000
    MONGO DB URI-> mongodb://localhost:27017/database name 
    admin -> testing 
    usernme nd pass-> 
    secret-
----------------------------------------
company structure 
1. product(IT) based company
 diff level of people working 
    CEO CFO-> product owner and clients(who give us the defination to built something)
    DEPT heads-> TEAM LEADER and TECH lead  
    Employees 
    poen staff etc..
    MVC ->
    Architure of heirerchy
    >MVC  -> Model View Controller

2. services based company
-> Cloud computing -> AWS , Google cloud  Azure(microsoft)
IAAS PAAS SAAS

topic of re-search sunday(3-4pm)
topmost used software enginnering models in the industry
what is currently running /used for developmnt
nodejs.org how are we using the provided mpms 
---------------------------------
>MVC  -> Model  Controller
VIEW -> react js
MERN stack 

model -> conatines info of database
controller-> heart of the App/site
routes-> basically routes via which over data transports over internet
services-> thirdparty api we use is over services
config-> just the info of the database or any other third party configuration
.evn -> enviormental variable 
PORT-> 3000
DB conn -> URL of connecting to database is for the first time and last time 

flipkart -> loggedin-> /POST sent to server
number 
password
in the backend flipkart has a post url wwww.flipkart.com/logggedin/user/hfrastukoltlatau5tgaot;otha
model -> check the fields
//validation that number data validation +91 9664858715 
page opened /home/products/tv+51/onida/hfwar25914agfzgyueavftge;atgs4u

model-> developed in Mongo db.
ask the at the croma store while buying a laptop?
what is the price
?
1,11,000
? configuration 
RAM: 8GB
SSD 128
GC=TB

entry file-> pilot file or commanding officor -> has liberty for everything 
server.js -> http server whwre we have info like port number -> on which port my backend services will run?
// MOngo db connection 
// routes //